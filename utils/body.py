import streamlit as st
import pandas as pd


psudo_title = "**Lorem ipsum nunc at libero elit curabitur**"
medium_parragraph = """
Lorem ipsum nunc at libero elit curabitur at lacus lectus placerat, condimentum metus nulla nec sollicitudin fusce orci aliquam congue mattis, condimentum pellentesque euismod himenaeos et suspendisse phasellus dictumst velit. Habitant massa sed aliquet aliquam ac vestibulum et curabitur odio sit viverra ante, eleifend auctor etiam risus quam elementum metus posuere ligula tristique neque lacus platea, curae est orci feugiat viverra mi dolor donec inceptos praesent phasellus.
"""




disclaimer_delete = """
Est√°s a punto de eliminar tu propuesta de curso de forma permanente. Esta acci√≥n es irreversible y no podr√°s recuperar la informaci√≥n eliminada. 
Si est√°s absolutamente seguro(a) confirma la eliminaci√≥n.
"""

html_banner = """
<div style="position: relative; width: 100%; padding: 10px;">
    <div style="border-radius: 10px; overflow: hidden;">
        <img src="https://i.ibb.co/q59pdXX/home.png" alt="Imagen de fondo" style="width: 100%; height: auto;">
    </div>
</div>
"""


html_home = """
<div style="position: relative; width: 100%; padding: 10px;">
    <div style="border-radius: 15px; overflow: hidden;">
        <img src="https://i.ibb.co/TcPD5dK/footer.png" alt="Imagen de fondo" style="width: 100%; height: auto;">
    </div>
</div>
"""

#Delete Warning
@st.dialog("Eliminar Curso")
def warning_deletion(course):
    st.subheader(f'@Eliminar **{course}**')
    st.error(disclaimer_delete,icon="üî•")

@st.dialog("Curso Eliminado")
def deletion_confirm():
    st.info("¬°Eliminado! Si necesitas ayuda, no dudes en contactar a sporte", icon="‚ÑπÔ∏è")
    st.markdown("**¬°Sigue adelante con Circle Up ‚ö´!**")
    st.snow()


@st.dialog("Cancelar Pre-Inscripcion")
def warning_unenroll(course):
    st.subheader(f'@Cancelando Reserva a **{course}**')
    st.error(f'Estas segur@ que ya no quires participar de **{course}**, es posible que al aforo se complete y ya no puedas inscribirte nuevamente ',icon="üî•")


@st.dialog("Pre-Inscripci√≥n Cancelada")
def unenrolled_confirm():
    st.info("¬°Tu pre-inscripci√≥n ha sido cancelada con √©xito!", icon="‚ÑπÔ∏è")
    st.markdown("**¬°Sigue adelante con Circle Up ‚ö´!**")
    st.snow()


# Warning Dialogs
@st.dialog("¬°Ups! Tenemos una advertencia")
def enrollment_warning(auth_warning):
    if auth_warning == 'one':
        st.info("No te preocupes, parece que ya recibimos tu registro. Te avisaremos para confirmar el inicio de las clases.", icon="‚ÑπÔ∏è")
        st.markdown("**¬°Sigue adelante con Circle Up ‚ö´!**")
    elif auth_warning == 'two':
        st.info("Cuando conceptualizamos el curso, nunca pensamos en excluir a nadie. Sin embargo, esta vez el contenido no aplica para tu grupo etario.", icon="‚ÑπÔ∏è")
        st.markdown("**¬°Sigue adelante con Circle Up ‚ö´!**")
    elif auth_warning == 'three':
        st.info("Los cupos son limitados y esta vez hemos alcanzado el aforo permitido. No te desanimes, te informaremos tan pronto como encontremos algo que se ajuste a tus temas de interes!.", icon="‚ÑπÔ∏è")
        st.markdown("**¬°Sigue adelante con Circle Up ‚ö´!**")



@st.dialog("¬°Vamos! ¬°Actualicemos!",width="small")
def warning_course_changes(changes):
    attributes = {
        'course_name':'Nombre del Curso', 
        'course_description':'Descripci√≥n del Curso',
        'min_audience':'Aforo M√≠nimo',
        'max_audience':'Aforo M√°ximo',
        'press_title':'T√≠tulo para Redes Sociales',
        'press_slogan':'Slogan para Invitar al P√∫blico',
        'course_categories':'Categor√≠as del Curso',
        'target_population':'Perfil Demogr√°fico'
    }

    st.markdown("Actualizar tu curso nos ayuda a mantener datos precisos y actualizados.")
    with st.container(height=300):
        st.subheader('**Actualizaciones Identificadas**')
        if len(changes) > 0:
            for key, update in changes.items():
                st.markdown(f'- Nuev@ [**{attributes[key]}**]: :blue[**{update[0]}**] | [**{attributes[key]}**] Anterior: :blue[**{update[1]}**]')

            st.info("Confirma antes de actualizar!", icon="‚ÑπÔ∏è")
        else:
            st.info("No se identifican cambios", icon="‚ÑπÔ∏è")


@st.dialog("¬°Vamos! ¬°Actualicemos!",width="small")
def warning_profile_changes(changes):
    attributes = {
        'first_name':'Nombre', 
        'last_name':'Apellido',
        'email':'Correo Electronico',
        'password':'Contrase√±a',
        'address':'Direccion',
        'phone_number':'Telefono Celular',
        'id_user':'N√∫mero Documento Identidad',
        'id_user_type':'Tipo D.I.',
        'city_residence':'Cuidad Residencia', 
        'guardian_fullname':'Nombre Tutor legal/Emergencia',
        'guardian_relationship':'Parentesco',
        'emergency_phone':'Telefono Tutor/Emergencia',
        'how_to_learn':'¬øC√≥mo aprendes mejor?',
        'skills':'¬øCu√°les son tus habilidades?',
        'strengths':'¬øCu√°les son tus fortalezas?',
        'weaknesses':'¬øCu√°les son tus debilidades?'
    }

    st.markdown("Actualizar tu perfil, especialmente tu correo electr√≥nico, n√∫meros de contacto y n√∫mero de emergencia, nos ayuda a mantener nuestra base de datos precisa y actualizada.")
    with st.container(height=300):
        st.subheader('**Actualizaciones Identificadas**')
        if any([value[-1] for value in changes.values()]):
            for key, update in changes.items():
                if update[-1]: 
                    if key != 'password':
                        st.markdown(f'- Has actualizado [**{attributes[key]}**] :green[**Antes:**] :blue[**{update[1]}**] | :green[**Ahora:**] :blue[**{update[0]}**]')
                    else: 
                        st.markdown(f'Has actualizado :blue[**Contrase√±a **********]')
            st.info("Confirma antes de actualizar!", icon="‚ÑπÔ∏è")
        else:
            st.info('¬°Por ahora no has realizado ninguna actualizaci√≥n! Por favor, verifica si hay cambios.', icon="‚ÑπÔ∏è")

@st.dialog("¬°Atenci√≥n! Acceso Denegado")
def unauthenticate_login(session_role):
    roles = {'Admin':'Sentinel','Volunteer':'Nomads','Learner':'Crew'}
    st.subheader(f'Sin acceso @{session_role}')
    st.markdown(f"Lo siento, pero actualmente no tienes autorizaci√≥n para acceder a las herramientas de **{session_role}**.")
    st.image(image='./gallery/nomad.png', use_column_width=True)


@st.dialog("¬°Ups! Parece que hubo un problema.")
def warning_login_failed(email:str = None,password:str = None):
    if email and password :
        st.markdown('Hemos tenido dificultades para encontrar tu cuenta.')
        st.markdown('- Revisa que tu **correo electr√≥nico y contrase√±a** est√©n  correctos. Es posible que haya errores de may√∫sculas, min√∫sculas o de escritura.')
    else: 
        st.markdown('Hemos tenido dificultades para encontrar tu cuenta.')
        st.markdown('- Revisa que tu **correo electr√≥nico y contrase√±a** est√©n  correctos. Es posible que haya errores de may√∫sculas, min√∫sculas o de escritura.')
        st.warning("Por favor, aseg√∫rate de revisar tu **correo electr√≥nico y contrase√±a**!", icon="‚ö†Ô∏è")

disclaimer_data_agreemet = """Al proporcionar mis datos, :blue-background[acepto] que sean utilizados y gestionados internamente, en conformidad con las leyes de protecci√≥n de datos de Colombia. Esto incluye la Ley de :blue-background[Protecci√≥n de Datos Personales (Ley 1581 de 2012)] y sus decretos reglamentarios. Entiendo que mis datos ser√°n tratados con el debido respeto y protecci√≥n, y que no ser√°n compartidos con terceros sin consentimiento expl√≠cito"""

@st.dialog("Tratamiento de Datos")
def warning_data_sharing():
    st.markdown(disclaimer_data_agreemet)
    st.divider()
    st.warning("Por favor, aseg√∫rate de aceptar el tratamiento de datos para completar tu registro.",icon="‚ö†Ô∏è")

@st.dialog("¬°Ups! Datos Faltantes")
def warning_empty_data(fields:str=''):
    st.markdown('Hemos notado que algunos campos est√°n sin llenar. Te invitamos a revisar nuevamente el formulario, puede que falte completar alg√∫n campo!')
    st.warning(f"Por favor, verifica que todos los campos est√©n diligenciados correctamente.")
    st.info(f"{fields}",icon='‚ÑπÔ∏è')

@st.dialog("¬°Ups! Algo sali√≥ mal")
def warning_reupload():
    st.markdown('Hemos notado que el nombre del curso que intentas subir ya est√° en el sistema.')
    st.divider()
    st.warning("Por favor, verifica que no est√°s sobrescribiendo un curso. Recuerda que tienes la opci√≥n de eliminar o actualizar en caso de que desees renombrar cursos.", icon="‚ö†Ô∏è")

# Info Dialogs

@st.dialog("Verificaci√≥n Pensum")
def verify_pensum_dialog():
    st.subheader(f'Hola, {st.session_state.user_auth.first_name}!')

    st.markdown(f"""
    Vemos que todos los campos est√°n diligenciados. Ten presente que todos los temas son bienvenidos 
    siempre que se alineen con liderazgo, pensamiento cr√≠tico y soluci√≥n de problemas.
    
    Si crees que debes hacer ajustes antes de enviarlo, es el momento. 
    Si no, puedes cerrar este di√°logo y hacer clic en **Enviar Email**.
    """)
    if st.button("Entendido",use_container_width=True,type='primary'):
        st.session_state.send_email = False
        st.session_state.verified = True
        st.rerun()


@st.dialog("¬°Aprende Sobre Tribus",width="large")
def tribu_definition():
    st.subheader('¬°Descubre su Esencia!')
    
    tribus_mean = """
    :blue[**Tribu Crew**]: Son el coraz√≥n de nuestra comunidad, los estudiantes entusiastas que se inscriben y participan activamente en los cursos. 
    Su pasi√≥n por el aprendizaje y su compromiso con la mejora continua son la fuerza motriz que impulsa nuestra misi√≥n social academica.

    
    :blue[**Tribu Nomads**]: Estos son los creativos visionarios, los voluntarios dedicados que dise√±an y planifican los cursos. 
    Su innovaci√≥n y esfuerzo garantizan que cada curso no solo sea educativo, sino tambi√©n inspirador y enriquecedor.

    
    :blue[**Tribu Sentinel**]: Ellos son los guardianes de la calidad, los administradores que supervisan y aseguran que los cursos cumplan 
    con los est√°ndares establecidos. Su vigilancia y atenci√≥n al detalle mantienen la integridad y la calidad de los cursos.
    """
    st.markdown(tribus_mean)

@st.dialog("¬øEst√° listo para revisi√≥n?", width="large")
def pensum_confirmation(inputs):
    def clean_text(text):
        return " ".join(text.replace("\n", " ").replace("-", "").split()) if isinstance(text, str) else text
    
    inputs = {key: clean_text(value) for key, value in inputs.items()}

    st.markdown(f"## {inputs['pensum_name']}")

    st.markdown("### Informaci√≥n General")
    st.info(f"""
    **√Årea de Conocimiento:** {inputs['knowledgebase_area']}
    **Modalidad:** {inputs['modality']}
    **Duraci√≥n:** {inputs['num_sessions']} sesi√≥n{'es' if int(inputs['num_sessions']) > 1 else ''} de {inputs['hours_per_session']} hora{'s' if float(inputs['hours_per_session']) > 1 else ''} cada una
    **Duraci√≥n Total:** {int(inputs['num_sessions']) * float(inputs['hours_per_session'])} horas
    **P√∫blico Objetivo:** Individuos en los siguientes rangos de edad:
    {', '.join(inputs['target_pop'])}

    Este curso ha sido dise√±ado para proporcionar una formaci√≥n {inputs['modality'].lower()} en {inputs['knowledgebase_area']}, 
    adaptada a las necesidades espec√≠ficas de los participantes en los rangos de edad mencionados.
    """)

    with st.expander("Objetivos de Aprendizaje", expanded=True):
        st.write(f"""
        1. **Objetivo general:** {inputs['key_objective']}
        2. **Objetivos espec√≠ficos:** {inputs['key_results']}
        """)

    with st.expander("Estructura del Curso", expanded=True):
        sesiones = [
            (i+1, inputs.get(f'topic{i+1}', ''), inputs.get(f'content{i+1}', ''), 
            inputs.get(f'activities{i+1}', ''), inputs.get(f'materials{i+1}', ''))
            for i in range(4)
        ]
        df_estructura = pd.DataFrame(sesiones, columns=["Sesi√≥n", "Tema", "Contenido", "Actividades", "Materiales"])
        st.dataframe(df_estructura, hide_index=True,use_container_width=True)

    with st.expander("Metodolog√≠a", expanded=True):
        st.write(f"""
        - **Enfoque pedag√≥gico:** {inputs['learning_approach']}
        - **Estrategias de ense√±anza:** {inputs['learning_strategy']}
        - **Recursos did√°cticos:** {inputs['learning_resources']}
        """)

    with st.expander("Evaluaci√≥n", expanded=True):
        st.write(f"""
        - **Criterios de evaluaci√≥n:** {inputs['learning_assessment']}
        """)

    st.warning("""
    ‚ö†Ô∏è **ADVERTENCIA**
    La validaci√≥n de este pensum tendr√° un costo al ser evaluada por Claude de Anthropic.

    - La evaluaci√≥n otorgar√° un m√°ximo de 45 puntos.
    - Claude es una IA generativa capaz de evaluar la informaci√≥n seg√∫n criterios predefinidos.
    - El costo se debe al uso de recursos computacionales avanzados.

    Por favor, env√≠a solo si est√°s seguro de que todo est√° listo para ser evaluado.
    """)

# Kudos Dialogs
@st.dialog("¬°Curso Actualizado!")
def succeed_update_course(name):
    st.subheader(f'¬°Hola, @{name}! ¬°Tu Curso ha sido actualizado!')
    st.markdown("¬°La informaci√≥n ya est√° en nuestro sistema! Ahora, ¬°puedes seguir adelante y realizar m√°s propuestas!")
    st.divider()
    st.success("¬°Listo! Si necesitas ayuda, no dudes en contactar a sporte", icon="‚úÖ")
    st.markdown("**¬°Sigue adelante con Circle Up ‚ö´!**")
    st.balloons()


@st.dialog("¬°Registro Exitoso!")
def succeed_signup(tribe):
    st.subheader(f'Bienvenido a la tribu @**{tribe}** üéâ')
    st.markdown("¬°Tu registro ha sido exitoso! Ahora puedes continuar al inicio de sesi√≥n para comenzar a disfrutar de nuestra comunidad.")
    st.divider()
    st.success("¬°Registro exitoso! Bienvenido a nuestra comunidad. ¬°Gracias por unirte!", icon="‚úÖ")
    st.markdown(":blue[**¬°Comencemos la Aventura!**]")
    st.balloons()

@st.dialog("¬°Perfil actualizado!")
def succeed_update_profiles(name):
    st.subheader(f'@{name}, ¬°has actualizado tu perfil con √©xito!')
    st.markdown("¬°Tus datos ya est√°n en nuestro sistema! Ahora puedes continuar con confianza, sabiendo que no te perder√°s ninguna invitaci√≥n.")
    st.divider()
    st.success("¬°Actualizaci√≥n del estado completada con √©xito! ¬°Gracias!", icon="‚úÖ")
    cols = st.columns([1,4,1])
    cols[1].markdown("**¬°Contin√∫a con tu viaje!**")
    st.balloons()


@st.dialog("¬°Propuesta Enviada!")
def succeed_proposal(course):
    st.subheader('¬°Tu idea est√° en camino!')
    st.markdown(f"¬°Tu curso :blue[@{course}], ha sido registrado en nuestro sistema y lo veras en :blue[2 minutos]! Ahora, vamos a trabajar juntos para hacerlo realidad.")
    st.divider()
    st.success("¬°Gracias por compartir tu idea! Este es solo el comienzo de algo asombroso. ", icon="‚úÖ")
    st.markdown("**¬°Sigue con Circle Up ‚ö´!**")
    st.balloons()

@st.dialog("Pre-Incripcion Enviada!")
def succefull_enrollment(course):
    st.subheader('¬°Tu solicitud est√° en camino!')
    st.markdown(f"¬°Acabas de resevar un lugar para :blue[@{course}]!")
    st.success("¬°Todos los cursos estan sujetos a cambios en el ultimo segundo, asi que siempre te estaresmos avisando por correo electronico el estado del curso", icon="‚úÖ")
    st.markdown("**¬°Sigue con Circle Up ‚ö´!**")
    st.balloons()



@st.dialog("¬°Email Enviado!")
def pensum_email_sent():
    st.subheader('üéâ ¬°Excelente! Tu email est√° en camino')
    
    st.markdown("""
    Hemos enviado un email con el an√°lisis detallado de Anthropic sobre tu curso. 
    Este email contiene:

    - Feedback valioso sobre tu propuesta
    - Preguntas para reflexionar
    - Ideas para inspirar tu creatividad
    
    üí° Recuerda: las grandes ideas necesitan tiempo. T√≥mate el tuyo para revisarlo con calma.
    """)
    
    st.success("Tu creatividad es el motor del cambio. ¬°Sigue adelante!", icon="üöÄ")
    
    st.balloons()

import streamlit as st

@st.dialog("¬°Email Enviado!")
def pensum_email_file():
    st.subheader('üéâ ¬°Tu pensum ha sido recibido!')
    
    st.markdown("""
    ‚Ä¢ Revisaremos tu propuesta en las pr√≥ximas 24 horas.  
    ‚Ä¢ Recibir√°s un email con preguntas clave y sugerencias.   
    ‚Ä¢ Nos enfocaremos en potenciar liderazgo, resoluci√≥n de problemas y pensamiento cr√≠tico.   
    """)
    
    st.success("üí° Tu creatividad impulsa el cambio. ¬°Gracias por contribuir a nuestra comunidad de aprendizaje!", icon="üöÄ")
    st.balloons()
    st.info("¬øPreguntas? Cont√°ctanos en cualquier momento.", icon="‚ÑπÔ∏è")

